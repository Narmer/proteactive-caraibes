(function(e, t, n) {
  "use strict";
  var r = t.Modernizr;
  e.CBPQTRotator = function(t, n) {
    this.$el = e(n);
    this._init(t);
  };
  e.CBPQTRotator.defaults = {
    speed: 700,
    easing: "ease",
    interval: 8e3
  };
  e.CBPQTRotator.prototype = {
    _init: function(t) {
      this.options = e.extend(!0, {}, e.CBPQTRotator.defaults, t);
      this._config();
      this.$items.eq(this.current).addClass("cbp-qtcurrent");
      this.support && this._setTransition();
      this._startRotator();
    },
    _config: function() {
      this.$items = this.$el.children("div.cbp-qtcontent");
      this.itemsCount = this.$items.length;
      this.current = 0;
      this.support = r.csstransitions;
      this.support && (this.$progress = e('<span class="cbp-qtprogress"></span>').appendTo(this.$el));
    },
    _setTransition: function() {
      setTimeout(e.proxy(function() {
        this.$items.css("transition", "opacity " + this.options.speed + "ms " + this.options.easing);
      }, this), 25);
    },
    _startRotator: function() {
      this.support && this._startProgress();
      setTimeout(e.proxy(function() {
        this.support && this._resetProgress();
        this._next();
        this._startRotator();
      }, this), this.options.interval);
    },
    _next: function() {
      this.$items.eq(this.current).removeClass("cbp-qtcurrent");
      this.current = this.current < this.itemsCount - 1 ? this.current + 1 : 0;
      this.$items.eq(this.current).addClass("cbp-qtcurrent");
    },
    _startProgress: function() {
      setTimeout(e.proxy(function() {
        this.$progress.css({
          transition: "width " + this.options.interval + "ms linear",
          width: "100%"
        });
      }, this), 25);
    },
    _resetProgress: function() {
      this.$progress.css({
        transition: "none",
        width: "0%"
      });
    },
    destroy: function() {
      if (this.support) {
        this.$items.css("transition", "none");
        this.$progress.remove();
      }
      this.$items.removeClass("cbp-qtcurrent").css({
        position: "relative",
        "z-index": 100,
        "pointer-events": "auto",
        opacity: 1
      });
    }
  };
  var i = function(e) {
    t.console && t.console.error(e);
  };
  e.fn.cbpQTRotator = function(t) {
    if (typeof t == "string") {
      var n = Array.prototype.slice.call(arguments, 1);
      this.each(function() {
        var r = e.data(this, "cbpQTRotator");
        if (!r) {
          i("cannot call methods on cbpQTRotator prior to initialization; attempted to call method '" + t + "'");
          return;
        }
        if (!e.isFunction(r[t]) || t.charAt(0) === "_") {
          i("no such method '" + t + "' for cbpQTRotator instance");
          return;
        }
        r[t].apply(r, n);
      });
    } else this.each(function() {
      var n = e.data(this, "cbpQTRotator");
      n ? n._init() : n = e.data(this, "cbpQTRotator", new e.CBPQTRotator(t, this));
    });
    return this;
  };
})(jQuery, window);