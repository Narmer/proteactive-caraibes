(function(e) {
  var t = {
    effect: "scroll",
    autoplay: !0,
    feedType: "none",
    feedCount: 5,
    refresh: "10:00"
  }, n = {
    scroll: {
      scrollInterval: 20,
      transitionTime: 500
    },
    fade: {
      displayTime: 4e3,
      transitionTime: 300
    },
    type: {
      typeInterval: 10,
      displayTime: 4e3,
      transitionTime: 300
    },
    slide: {
      slideDistance: 100,
      displayTime: 4e3,
      transitionTime: 350
    }
  }, r = {
    "rss-atom": {
      feedUrl: ""
    },
    twitter: {
      twitterName: ""
    }
  }, i = {
    init: function(t) {
      var i = {};
      e.extend(i, {
        feedType: t.feedType
      });
      e.extend(i, r[i.feedType]);
      e.extend(i, {
        effect: t.effect
      });
      e.extend(i, n[i.effect]);
      e.extend(i, t);
      return this.each(function() {
        function t() {
          c();
          L.addClass("mt-hide");
          k.addClass("mt-preloader");
          L.children().remove();
          L.css("margin-left", 0);
          A.css("opacity", "1").removeClass("mt-hide");
          L.append(A);
          switch (i.feedType) {
           case "rss-atom":
            e.ajax({
              url: "https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&num=" + i.feedCount + "&q=" + i.feedUrl,
              type: "GET",
              dataType: "jsonp",
              success: function(e) {
                var t = e.responseData.feed.entries;
                for (var r = 0; r < t.length; r++) L.append("<li><a href='" + t[r].link + "' target='_blank'>" + t[r].title + "</a></li>");
                n();
              }
            });
            break;
           case "twitter":
            e.ajax({
              url: "http://api.twitter.com/1/statuses/user_timeline.json",
              type: "GET",
              dataType: "jsonp",
              data: {
                screen_name: i.twitterName,
                count: i.feedCount,
                trim_user: !0
              },
              success: function(e) {
                for (var t = 0; t < e.length; t++) L.append("<li><a href='http://twitter.com/#!/" + e[t].user.id_str + "/status/" + e[t].id_str + "' target='_blank'>" + e[t].text + "</a></li>");
                n();
              }
            });
          }
        }
        function n() {
          k.removeClass("mt-preloader");
          L.removeClass("mt-hide");
          s();
        }
        function r() {
          if (i.feedType == "rss-atom" || i.feedType == "twitter") {
            clearTimeout(T);
            x = !1;
            t();
          }
        }
        function s() {
          i.effect != "scroll" && L.children("li:not(:first)").addClass("mt-hide");
          if (S) {
            S = !1;
            if (i.autoplay) {
              f();
              d();
            }
          } else h();
          i.refresh && (T = setTimeout(r, o(i.refresh)));
          x = !0;
        }
        function o(e) {
          var t;
          if (typeof e == "number") t = e; else {
            var n = e.split(":");
            n.reverse();
            t = parseFloat(n[0]);
            n[1] && (t += parseFloat(n[1]) * 60);
            n[2] && (t += parseFloat(n[2]) * 3600);
          }
          return t * 1e3;
        }
        function u(e) {
          x && a(e.data.type);
        }
        function a(t) {
          if (!w) {
            w = !0;
            c();
            if (t == "prev") switch (i.effect) {
             case "scroll":
              L.css({
                "margin-left": -e(L.children(":last")).outerWidth()
              }).children(":last").prependTo(L);
              L.animate({
                "margin-left": 0
              }, i.transitionTime, function() {
                w = !1;
                M.mouseleave(function() {
                  h();
                });
              });
              break;
             case "fade":
              L.children(":first").animate({
                opacity: 0
              }, i.transitionTime, function() {
                e(this).addClass("mt-hide");
                L.children(":last").prependTo(L).removeClass("mt-hide").css({
                  opacity: 0
                }).animate({
                  opacity: 1
                }, i.transitionTime, function() {
                  h();
                });
                w = !1;
              });
              break;
             case "type":
              L.children(":first").animate({
                opacity: 0
              }, i.transitionTime, function() {
                e(this).addClass("mt-hide");
                p(L.children(":last").prependTo(L).removeClass("mt-hide").css({
                  opacity: 0
                }).animate({
                  opacity: 1
                }, i.transitionTime).children("a"));
                w = !1;
              });
              break;
             case "slide":
              L.children(":first").animate({
                opacity: 0
              }, i.transitionTime, function() {
                e(this).addClass("mt-hide");
                L.children(":last").prependTo(L).removeClass("mt-hide").css({
                  opacity: 0,
                  "margin-left": i.slideDistance
                }).animate({
                  opacity: 1,
                  "margin-left": 0
                }, i.transitionTime, function() {
                  h();
                });
                w = !1;
              });
            } else switch (i.effect) {
             case "scroll":
              L.animate({
                "margin-left": -e(L.children(":first")).outerWidth()
              }, i.transitionTime, function() {
                L.css("margin-left", 0).children(":first").appendTo(L);
                w = !1;
                _.mouseleave(function() {
                  h();
                });
              });
              break;
             case "fade":
              L.children(":first").animate({
                opacity: 0
              }, i.transitionTime, function() {
                e(this).addClass("mt-hide").appendTo(L);
                L.children(":first").removeClass("mt-hide").css({
                  opacity: 0
                }).animate({
                  opacity: 1
                }, i.transitionTime, function() {
                  h();
                });
                w = !1;
              });
              break;
             case "type":
              L.children(":first").animate({
                opacity: 0
              }, i.transitionTime, function() {
                e(this).addClass("mt-hide").appendTo(L);
                p(L.children(":first").removeClass("mt-hide").css({
                  opacity: 0
                }).animate({
                  opacity: 1
                }, i.transitionTime).children("a"));
                w = !1;
              });
              break;
             case "slide":
              L.children(":first").animate({
                opacity: 0
              }, i.transitionTime, function() {
                e(this).addClass("mt-hide").appendTo(L);
                L.children(":first").removeClass("mt-hide").css({
                  opacity: 0,
                  "margin-left": i.slideDistance
                }).animate({
                  opacity: 1,
                  "margin-left": 0
                }, i.transitionTime, function() {
                  h();
                });
                w = !1;
              });
            }
          }
        }
        function f() {
          y = !0;
          i.effect == "scroll" ? g = setInterval(function() {
            var t = parseFloat(L.css("margin-left")) - 1;
            L.css("margin-left", t);
            Math.abs(t) > e(L.children("li")[0]).outerWidth() && L.css("margin-left", 0).children(":first").appendTo(L);
          }, i.scrollInterval) : g = setInterval(function() {
            a("next");
          }, i.displayTime);
        }
        function l() {
          y = !1;
          clearInterval(g);
        }
        function c() {
          if (y) {
            b = !0;
            l();
          }
        }
        function h() {
          if (b && !E) {
            f();
            b = !1;
          }
        }
        function p(e) {
          var t = e.html().split(""), n = 0;
          e.html("_");
          var r = setInterval(function() {
            var i = e.html().split("_")[0] + t[n++];
            n != t.length && (i += "_");
            e.html(i);
            if (n == t.length) {
              clearInterval(r);
              h();
            }
          }, i.typeInterval);
        }
        function d() {
          D.addClass("mt-pause");
        }
        function v() {
          D.removeClass("mt-pause");
        }
        function m() {
          return !1;
        }
        var g, y = !1, b = !1, w = !1, E = !1, S = !0, x = !1, T, N = e(this), C = N.children(".mt-label"), k = N.children(".mt-news"), L = k.children("ul"), A = L.children("li"), O = N.children(".mt-controls"), M = O.children(".mt-prev"), _ = O.children(".mt-next"), D = O.children(".mt-play");
        i.effect == "scroll" && N.addClass("mt-scroll");
        C.css("width", C.width());
        var P = N.width();
        C.length && (P -= C.outerWidth() + parseFloat(C.css("margin-right")));
        O.length && (P -= O.outerWidth() + parseFloat(O.css("margin-left")));
        k.css("width", P);
        k.hover(function() {
          if (x) {
            c();
            E = !0;
          }
        }, function() {
          if (x) {
            E = !1;
            h();
          }
        });
        M.mousedown(m).bind("click", {
          type: "prev"
        }, u);
        _.mousedown(m).bind("click", {
          type: "next"
        }, u);
        D.mousedown(m).click(function() {
          if (x) if (y) {
            l();
            v();
          } else {
            f();
            d();
          }
        });
        i.feedType == "rss-atom" || i.feedType == "twitter" ? t() : s();
        N.data("pause", c);
        N.data("resume", h);
        N.data("refresh", r);
      });
    },
    pause: function() {
      return this.each(function() {
        e(this).data("pause")();
      });
    },
    resume: function() {
      return this.each(function() {
        e(this).data("resume")();
      });
    },
    refresh: function() {
      return this.each(function() {
        e(this).data("refresh")();
      });
    }
  };
  e.fn.modernTicker = function(t) {
    if (i[t]) return i[t].apply(this, Array.prototype.slice.call(arguments, 1));
    if (typeof t == "object" || !t) return i.init.apply(this, arguments);
    e.error("Method " + t + " does not exist on jQuery.modernTicker");
  };
})(jQuery);